//
//  Config.xcconfig
//  XCMBuild
//
// reactive-firewall/XCMBuild General Config
// ..................................
// Copyright (c) 2023, Mr. Walls
// ..................................
// Licensed under APACHE-2 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// ..........................................
// http://www.apache.org/licenses/LICENSE-2.0
// ..........................................
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Configuration settings file format documentation can be found at:
// https://help.apple.com/xcode/#/dev745c5c974

#include "ReleaseConfig.xcconfig"


//:configuration = Release
PRODUCT_ORG_IDENTIFIER = org.pak.dt.
DEBUG_INFORMATION_FORMAT = dwarf-with-dsym
VALIDATE_PRODUCT = YES
DEPLOYMENT_POSTPROCESSING = YES
BUILD_LIBRARY_FOR_DISTRIBUTION = $(DEPLOYMENT_POSTPROCESSING)
ONLY_ACTIVE_ARCH = NO
ALLOW_TARGET_PLATFORM_SPECIALIZATION = !$(ONLY_ACTIVE_ARCH)
ENABLE_TESTABILITY = YES
SKIP_INSTALL = !$(DEPLOYMENT_POSTPROCESSING)
SKIP_INSTALL[sdk=macosx*] = NO
DSTROOT = $(PROJECT_DIR:standardizepath)/dist
COPY_PHASE_STRIP = !$(SKIP_INSTALL)
INSTALL_GROUP = _developer
STRIP_INSTALLED_PRODUCT[sdk=macosx*] = $(DEPLOYMENT_POSTPROCESSING)
STRIP_STYLE[sdk=macosx*] = debugging
DEAD_CODE_STRIPPING = $(STRIP_INSTALLED_PRODUCT)
// KEEP_PRIVATE_EXTERNS = $(DEFINES_MODULE) // issue with -dynamiclibs
LD_GENERATE_MAP_FILE[arch=i386] = !$(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
EAGER_LINKING = $(LD_GENERATE_MAP_FILE)
COMPILER_INDEX_STORE_ENABLE = Default
GENERATE_INFOPLIST_FILE = YES
PRODUCT_NAME = $(TARGET_NAME:c99extidentifier)
ALWAYS_SEARCH_USER_PATHS = NO
FRAMEWORK_SEARCH_PATHS[sdk=macosx*] = $(inhereted) $(LOCAL_SYSTEM_LIBRARY) $(BUILT_PRODUCTS_DIR:standardizepath)
// CODE_SIGN_IDENTITY = Apple Development
ENABLE_HARDENED_RUNTIME = YES
OTHER_CODE_SIGN_FLAGS = $(inhereted) --prefix=$(PRODUCT_ORG_IDENTIFIER)
GENERATE_TEXT_BASED_STUBS = $(SKIP_INSTALL)
TAPI_ENABLE_PROJECT_HEADERS[sdk=macosx*] = $(GENERATE_TEXT_BASED_STUBS) && $(EAGER_LINKING)
TAPI_VERIFY_MODE = Pedantic
LLVM_LTO = $(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
LLVM_LTO[sdk=macosx*][arch=arm64] = YES_THIN
LLVM_LTO[sdk=macosx*][arch=x86_64] = YES_THIN
LLVM_LTO[sdk=macosx*][arch=arch64] = YES_THIN
CLANG_CXX_LANGUAGE_STANDARD = compiler-default
CLANG_ENABLE_MODULES = $(DEFINES_MODULE)
CLANG_ENABLE_OBJC_ARC = YES
CLANG_ENABLE_OBJC_WEAK = YES
CLANG_ENABLE_OBJC_ARC_EXCEPTIONS = $(CLANG_ENABLE_OBJC_ARC)
ENABLE_STRICT_OBJC_MSGSEND = YES
CLANG_UNDEFINED_BEHAVIOR_SANITIZER_ALL = $(ENABLE_STRICT_OBJC_MSGSEND)
CLANG_UNDEFINED_BEHAVIOR_SANITIZER_INTEGER = $(CLANG_UNDEFINED_BEHAVIOR_SANITIZER_ALL)
CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY = $(CLANG_UNDEFINED_BEHAVIOR_SANITIZER_ALL)
CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = $(CLANG_ENABLE_OBJC_ARC)
CLANG_WARN_COMPLETION_HANDLER_MISUSE = $(ENABLE_STRICT_OBJC_MSGSEND)
CLANG_WARN_DOCUMENTATION_COMMENTS = YES
CLANG_WARN_EMPTY_BODY = $(DEAD_CODE_STRIPPING)
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES
CLANG_WARN_IMPLICIT_SIGN_CONVERSION = YES_ERROR
CLANG_WARN_INFINITE_RECURSION = YES
CLANG_WARN_FRAMEWORK_INCLUDE_PRIVATE_FROM_PUBLIC = !$(TAPI_ENABLE_PROJECT_HEADERS)
CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = $(DEFINES_MODULE)
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_COMMA = YES
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES_ERROR
CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE
CLANG_WARN_UNREACHABLE_CODE = $(DEAD_CODE_STRIPPING)
CLANG_WARN_RANGE_LOOP_ANALYSIS = $(ENABLE_TESTABILITY)
CLANG_WARN_SUSPICIOUS_MOVE = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = $(ENABLE_TESTABILITY)
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = $(CLANG_ENABLE_OBJC_ARC)
CLANG_STATIC_ANALYZER_MODE = deep
CLANG_ANALYZER_NONNULL = YES
CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE
GCC_TREAT_WARNINGS_AS_ERRORS = YES
GCC_GENERATE_TEST_COVERAGE_FILES[sdk=macosx*] = $(ENABLE_TESTABILITY)
GCC_DYNAMIC_NO_PIC = NO
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS[sdk=macosx*] = $(ENABLE_TESTABILITY)
GCC_NO_COMMON_BLOCKS = YES
GCC_C_LANGUAGE_STANDARD = compiler-default
GCC_CW_ASM_SYNTAX = NO
GCC_CW_ASM_SYNTAX[arch=arm64e] = !$(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
GCC_CW_ASM_SYNTAX[arch=x86_64] = !$(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
GCC_CW_ASM_SYNTAX[arch=arm64] = !$(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
GCC_PREPROCESSOR_DEFINITIONS[sdk=macosx*] = TARGET_OS_OSX=1 $(inherited)
GCC_WARN_64_TO_32_BIT_CONVERSION = $(GCC_TREAT_WARNINGS_AS_ERRORS)
GCC_WARN_64_TO_32_BIT_CONVERSION[arch=x86_64] = $(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR
GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES
GCC_WARN_SIGN_COMPARE = $(GCC_TREAT_WARNINGS_AS_ERRORS)
GCC_WARN_SIGN_COMPARE[arch=*64] = $(ALLOW_TARGET_PLATFORM_SPECIALIZATION)
GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE
GCC_WARN_UNKNOWN_PRAGMAS = YES
GCC_WARN_UNUSED_FUNCTION = $(ENABLE_TESTABILITY)
GCC_WARN_UNUSED_VARIABLE = $(ENABLE_TESTABILITY)
GCC_WARN_UNDECLARED_SELECTOR = YES
MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE
MTL_FAST_MATH = YES
OSACOMPILE_EXECUTE_ONLY = YES
SUPPORTS_MACCATALYST = NO //disable breaking Mac by default (unused)

#include "Specialized.xcconfig"
#include "XCMBuildInfo.xcconfig"
