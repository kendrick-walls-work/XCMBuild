name: CI
on:
  push:
    branches:
      - dev
      - stable
    tags:
      - v*

jobs:
  BUILD:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      LANG: "en_US.UTF-8"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: 3.11
    - name: Pre-Clean
      id: clean
      run: make -j1 -f Makefile purge 2>/dev/null || true ;
    - name: Test Build
      id: build
      run: make -j1 -f Makefile build ;
    - name: Post-Clean
      id: post
      run: make -j1 -f Makefile purge || true ;


  BOOTSTRAP:
    if: ${{ always() }}
    needs: BUILD
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    timeout-minutes: 10
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.11, 3.12]
        lang-var: ["de.utf-8", "jp.utf-8"]
        experimental: [true]
        include:
          - os: macos-latest
            python-version: 3.11
            lang-var: "en_US.utf-8"
            experimental: false
          - os: ubuntu-latest
            python-version: 3.11
            lang-var: "en_US.utf-8"
            experimental: true
          - os: macos-latest
            python-version: 3.11
            lang-var: "de.utf-8"
            experimental: true
          - os: macos-latest
            python-version: 3.11
            lang-var: "jp.utf-8"
            experimental: false
          - os: ubuntu-latest
            python-version: 3.12
            lang-var: "en_US.utf-8"
            experimental: true
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      LANG: ${{ matrix.lang-var }}
      LC_CTYPE: ${{ matrix.lang-var }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r ./requirements.txt
    - name: Pre-build
      id: bootstrap
      run: |
        make -j1 -f Makefile clean || true ;
        make -j1 -f Makefile bootstrap ;
      shell: bash
    - name: Test Info
      id: lic-info
      run: cat <LICENSE-2.0.txt || true ;
    - name: Post-Clean
      id: post
      run: |
        make -j1 -f Makefile purge || true ;
        make -j1 -f Makefile clean || true ;
      if: ${{ always() }}
      shell: bash


  MATS:
    if: ${{ always() }}
    needs: BUILD
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    timeout-minutes: 10
    env:
      OS: macos-latest
      CODE_SIGN_IDENTITY: '-'
      PYTHON_VERSION: 3.11
      LANG: "en_US.utf-8"
    steps:
    - uses: actions/checkout@v3
    - name: Pre-Clean
      id: clean
      run: make -j1 -f Makefile purge || true ;
    - name: Build for Testing
      id: xcodebuild
      run: |
        xcodebuild -sdk macosx -project XCMBuild.xcodeproj -configuration Release -scheme All clean ;
        xcodebuild -sdk macosx -project XCMBuild.xcodeproj -configuration Release -scheme All build ;
    - name: Run Tests
      id: tests
      run: |
        make -f Makefile purge || true ;
        make -f Makefile test || true ;
        make -f Makefile clean || true ;
    - name: Post-Clean
      id: post
      run: make -j1 -f Makefile clean || true ;
      if: ${{ always() }}
